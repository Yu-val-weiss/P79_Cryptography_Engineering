version: '3'

tasks:
  zip-*:
    desc: "Zip lab directory ready for submission."
    vars:
      FOLDER: "lab{{index .MATCH 0}}"
    dir: "{{.FOLDER}}"
    cmds:
      - mkdir -p ../zips
      - cp ../Dockerfile .
      - defer: rm -f Dockerfile
      - cp ../.dockerignore .
      - defer: rm -f .dockerignore
      - cp ../run.sh .
      - defer: rm -f ./run.sh
      - sed -i "" "s/X/{{.FOLDER}}/g" run.sh
      - zip -r ../zips/{{.FOLDER}}.zip $(git ls-files) $(git ls-files --others --exclude-standard)
      - cp ../zips/{{.FOLDER}}.zip /Users/yuval/Desktop
      - du -sh ../zips/{{.FOLDER}}.zip
    preconditions:
      - sh: uv run python -m pytest
        msg: "One or more unit tests are failing, fix before zipping."
      - sh: uv run mypy src
        msg: "Mypy is failing."
      - sh: ls *.pdf
        msg: "Lab report not present, add before zipping."
    silent: false

  docker-*:
    desc: "Check Docker works."
    vars:
      FOLDER: "lab{{index .MATCH 0}}"
    dir: "{{.FOLDER}}"
    cmds:
      - cp ../Dockerfile .
      - cp ../.dockerignore .
      - cp ../run.sh .
      - sed -i "" "s/X/{{.FOLDER}}/g" run.sh
      - ./run.sh

  dockergo-*:
    desc: "Check Docker works for go."
    vars:
      FOLDER: "lab{{index .MATCH 0}}"
    dir: "{{.FOLDER}}"
    cmds:
      - cp ../Dockerfile.go ./Dockerfile
      - cp ../.dockerignore .
      - cp ../run.sh .
      - sed -i "" "s/X/{{.FOLDER}}/g" run.sh
      - ./run.sh
  
  clean-*:
    desc: "Cleanup."
    vars:
      FOLDER: "lab{{index .MATCH 0}}"
    dir: "{{.FOLDER}}"
    cmds:
      - rm -f run.sh
      - rm -f Dockerfile
      - rm -f .dockerignore

  mypy-*:
    desc: "Check mypy for src."
    vars:
      FOLDER: "lab{{index .MATCH 0}}"
    cmds:
      - uv run mypy {{.FOLDER}}/src

  test-*:
    desc: "Test the folder."
    vars:
      FOLDER: "lab{{index .MATCH 0}}"
    dir: "{{.FOLDER}}"
    cmds:
      - uv run python -m pytest {{.CLI_ARGS}}

  testgo-*:
    desc: "Test the folder (go)."
    vars:
      FOLDER: "lab{{index .MATCH 0}}"
    dir: "{{.FOLDER}}"
    cmds:
      - gotestsum ./...
  
  cover-*:
    desc: "Unit test code coverage of the folder."
    vars:
      FOLDER: "lab{{index .MATCH 0}}"
    dir: "{{.FOLDER}}"
    cmds:
      - uv run coverage run -m pytest
      - uv run coverage html